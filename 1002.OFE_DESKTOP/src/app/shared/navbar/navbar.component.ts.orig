import { Component, OnInit, Renderer, ViewChild, ElementRef, Directive } from '@angular/core';
import { ROUTES } from '../.././sidebar/sidebar-routes.config';
import { Router, ActivatedRoute } from '@angular/router';
import { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';
import { Usuario, Organizacion } from 'app/model/usuario';
import { LoginService } from 'app/service/login.service';
var misc: any = {
    navbar_menu_visible: 0,
    active_collapse: true,
    disabled_collapse_init: 0,
}
declare var $, DatatableFunctions: any;
var oNavbarComponent: NavbarComponent;
@Component({
    moduleId: module.id,
    selector: 'navbar-cmp',
    templateUrl: 'navbar.component.html',
    providers: [LoginService]
})

export class NavbarComponent implements OnInit {
    private listTitles: any[];
    location: Location;
    private nativeElement: Node;
    private toggleButton;
    private org_id_original: string;
    private sidebarVisible: boolean;
    public organizaciones: Organizacion[];
    public usuario: Usuario = new Usuario();
    public PermitirCambiarOrganizacion: boolean = false;
    @ViewChild("navbar-cmp") button;

    constructor(location: Location, private router: Router, private route: ActivatedRoute, private renderer: Renderer, private element: ElementRef, private loginService: LoginService) {
        this.location = location;
        this.nativeElement = element.nativeElement;
        this.sidebarVisible = false;
        this.usuario = JSON.parse(localStorage.getItem('usuarioActual')) as Usuario;
        console.log(this.usuario);
        this.organizaciones = this.usuario.organizaciones;
        if (this.organizaciones && this.organizaciones.length > 1) {

            this.PermitirCambiarOrganizacion = true;
        }
    }

    ngOnInit() {
        oNavbarComponent = this;

        DatatableFunctions.SetNavbarComponent(oNavbarComponent);
        this.listTitles = ROUTES.filter(listTitle => listTitle);

        var navbar: HTMLElement = this.element.nativeElement;
        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];
        if ($('body').hasClass('sidebar-mini')) {
            misc.sidebar_mini_active = true;
        }
        $('#minimizeSidebar').click(function () {
            var $btn = $(this);

            if (misc.sidebar_mini_active == true) {
                $('body').removeClass('sidebar-mini');
                misc.sidebar_mini_active = false;

            } else {
                setTimeout(function () {
                    $('body').addClass('sidebar-mini');

                    misc.sidebar_mini_active = true;
                }, 300);
            }

            // we simulate the window Resize so the charts will get updated in realtime.
            var simulateWindowResize = setInterval(function () {
                window.dispatchEvent(new Event('resize'));
            }, 180);

            // we stop the simulation of Window Resize after the animations are completed
            setTimeout(function () {
                clearInterval(simulateWindowResize);
            }, 1000);
        });

    }

    isMobileMenu() {
        if ($(window).width() < 991) {
            return false;
        }
        return true;
    }

    sidebarToggle() {
        var toggleButton = this.toggleButton;
        var body = document.getElementsByTagName('body')[0];

        if (this.sidebarVisible == false) {
            setTimeout(function () {
                toggleButton.classList.add('toggled');
            }, 500);
            body.classList.add('nav-open');
            $(".main-panel").append("<div class='close-layer visible' style='height: 4252px;'></div>");
            var navbarcmp = this;
            $(".close-layer").on("click", function () {
                navbarcmp.sidebarToggle();
            });
            this.sidebarVisible = true;
        } else {
            this.toggleButton.classList.remove('toggled');
            this.sidebarVisible = false;
            body.classList.remove('nav-open');
            $(".close-layer").remove();
        }
    }

    getTitle() {
        var titlee = this.location.prepareExternalUrl(this.location.path());
        //console.log('titlee',titlee);
        if (titlee.charAt(0) === '#') {
            titlee = titlee.slice(2);
        }
        //console.log('titlee',titlee);
        //console.log('this.listTitles',this.listTitles);

        let selected = this.listTitles.find(a => a.path === titlee);
        //console.log('selected',selected);

        if (selected && selected.title) {
            return selected.title;

        }
        else {
            selected = this.listTitles.find(a => EncontrarPath(a, titlee));
            if (selected && selected.title) {
                return selected.title;

            }
        }
        return 'Dashboard';
    }

    getPath() {
        return this.location.prepareExternalUrl(this.location.path());
    }

<<<<<<< HEAD
    logout(event){
       localStorage.clear();
       let baseurl=$('#baseurl').attr('href');
       console.log('****************************');
       console.log(baseurl);
       //console.log(window.location.href);
       //window.location.href = baseurl;
       event.preventDefault();
=======
    logout(event) {

        oNavbarComponent.loginService.KillToken()
            .subscribe(
            response => {
                console.log('response', response);
                localStorage.clear();
                let baseurl = $('#baseurl').attr('href');
                window.location.href = baseurl;
            },
            error => {
                console.error('error', error);
                localStorage.clear();
                let baseurl = $('#baseurl').attr('href');
                window.location.href = baseurl;
            },
            () => { }
            );

        if (event)
            event.preventDefault();
>>>>>>> 1002.PFE.Portal
    }

    cambiarOrganizacion($event) {
        this.usuario = JSON.parse(localStorage.getItem('usuarioActual')) as Usuario;

        localStorage.setItem('org_id_original', this.usuario.org_id);
        $('#mdlOrganizacion').modal('show');


        event.preventDefault();
    }
    AceptarOrganizacion(event) {

        console.log('AceptarOrganizacion');
        this.org_id_original = localStorage.getItem('org_id_original');
        if (this.org_id_original != this.usuario.org_id) {

            this.GuardarSession();
            let org = this.usuario.organizaciones.find(a => a.id == this.usuario.org_id) as Organizacion;
            this.usuario.tipo_empresa = org.tipo_empresa;


            // console.log(org);

        }
        $('#mdlOrganizacion').modal('toggle');
        if (event)
            event.preventDefault();
    }

    GuardarSession() {
        localStorage.setItem('org_id', this.usuario.org_id);
        localStorage.setItem("username", this.usuario.nombreusuario);

        let org = this.usuario.organizaciones.find(a => a.id == this.usuario.org_id);

        localStorage.setItem('tipo_empresa', this.usuario.tipo_empresa);
        localStorage.setItem('Ocp_Apim_Subscription_Key', org.keySuscripcion);
        localStorage.setItem('org_nombre', org.nombre);
        localStorage.setItem('org_ruc', org.ruc);

        this.usuario.ruc_org = org.ruc;
        this.usuario.tipo_empresa = org.tipo_empresa;
        this.usuario.org_url_image = org.url_image;
        this.usuario.isopais_org = org.isoPais;

        localStorage.setItem('usuarioActual', JSON.stringify(this.usuario));
        let baseurl = $('#baseurl').attr('href');

        let oSidebarComponent = DatatableFunctions.getSidebarComponent();
        if (oSidebarComponent)
            oSidebarComponent.usuarioActual = JSON.parse(localStorage.getItem('usuarioActual'));



        if (this.usuario.perfil == "comprador") {
            //this.router.navigate(["/ordencompra/comprador/buscar"], { relativeTo: this.route });



            localStorage.setItem('menuLateral', JSON.stringify([{
                icon: 'assignment',
                title: 'Comprador',
                subnivel: [{
                    link: '/ordencompra/comprador/buscar',
                    mini: 'O',
                    normal: 'Orden Compra'
                }, {
                    link: '/guia/comprador/buscar',
                    mini: 'G',
                    normal: 'Guías'
                }, {
                    link: '/conformidadservicio/comprador/buscar',
                    mini: 'HAS',
                    normal: 'Aceptación de Servicio'
                }, { link: '/factura/comprador/buscar', mini: 'CP', normal: 'Comprobante de Pago' }]
            }, {
                icon: 'assignment',
                title: 'Comprobantes',
                subnivel: [{
                    link: '/comprobantes',
                    mini: 'O',
                    normal: 'Crear'
                }, {
                    link: '/comprobantes/consultar',
                    mini: 'G',
                    normal: 'Consultar'
                }]
            }, {
                icon: 'assignment',
                title: 'Percepción/Retención',
                subnivel: [{
                    link: '/percepcion-retencion/retencion/crear',
                    mini: 'O',
                    normal: 'Crear'
                }, {
                    link: '/percepcion-retencion/consultar',
                    mini: 'G',
                    normal: 'Consultar'
                }]
            }, {
                icon: 'assignment',
                title: 'Guía de Remisión',
                min: 'GR',
                subnivel: [{
                    link: '/',
                    mini: 'O',
                    normal: 'Crear'
                }, {
                    link: '/',
                    mini: 'G',
                    normal: 'Consultar'
                }]
            }, {
                icon: 'assignment',
                title: 'Bienes/Servicios',
                min: 'CO',
                subnivel: [{
                    link: '/',
                    mini: 'O',
                    normal: 'Crear'
                }, {
                    link: '/',
                    mini: 'G',
                    normal: 'Consultar'
                }]
            }, {
                icon: 'assignment',
                title: 'Resumen de Boletas',
                min: 'CO',
                subnivel: [{
                    link: '/',
                    mini: 'G',
                    normal: 'Consultar'
                }]
            }, {
                icon: 'assignment',
                title: 'Resumen de Bajas',
                min: 'CO',
                subnivel: [{
                    link: '/resumen-bajas/crear',
                    mini: 'O',
                    normal: 'Crear'
                }, {
                    link: '/resumen-bajas/consultar',
                    mini: 'G',
                    normal: 'Consultar'
                }]
            }, {
                icon: 'assignment',
                title: 'Reportes',
                min: 'CO',
                subnivel: [{
                    link: '/',
                    mini: 'G',
                    normal: 'Documentos por Emisor'
                }]
            }, {
                icon: 'assignment',
                title: 'Configuración',
                min: 'CO',
                subnivel: [{
                    link: '/',
                    mini: 'G',
                    normal: 'Mi cuenta'
                }, {
                    link: '/',
                    mini: 'G',
                    normal: 'Configuración de la Empresa'
                }, {
                    link: '/',
                    mini: 'G',
                    normal: 'Configuración Parámetros/Dominios'
                }]
            }
            ]));
            window.location.href = baseurl + 'ordencompra/comprador/buscar';


            //localStorage.setItem('menuLateral', JSON.stringify([{icon:'assignment',title:'Comprador',subnivel:[{link:'/requerimiento/comprador/buscar',mini:'S',normal:'Solicitud de Cotizacion'},{link:'/cotizacion/comprador/buscar',mini:'C',normal:'Cotizaciones'},{link:'/ordencompra/comprador/buscar',mini:'O',normal:'Orden Compra'},{link:'/guia/comprador/buscar',mini:'G',normal:'Guías'},{link:'/conformidadservicio/comprador/buscar',mini:'HAS',normal:'Aceptación de Servicio'},{link:'/factura/comprador/buscar',mini:'CP',normal:'Comprobante de Pago'}]}]));
        }
        else {

            //this.router.navigate(["/ordencompra/proveedor/buscar"], { relativeTo: this.route });
            localStorage.setItem('menuLateral', JSON.stringify([{
                icon: 'assignment',
                title: 'Proveedor',
                subnivel: [{
                    link: '/ordencompra/proveedor/buscar',
                    mini: 'O',
                    normal: 'Orden Compra'
                }, {
                    link: '/guia/proveedor/buscar',
                    mini: 'G',
                    normal: 'Guías'
                }, {
                    link: '/conformidadservicio/proveedor/buscar',
                    mini: 'HAS',
                    normal: 'Aceptación de Servicio'
                }, { link: '/factura/proveedor/buscar', mini: 'CP', normal: 'Comprobante de Pago' }]
            },]));

            window.location.href = baseurl + 'ordencompra/proveedor/buscar';


            //localStorage.setItem('menuLateral', JSON.stringify([{icon:'assignment',title:'Proveedor',subnivel:[{link:'/requerimiento/proveedor/buscar',mini:'S',normal:'Solicitud de Cotizacion'},{link:'/cotizacion/proveedor/buscar',mini:'C',normal:'Cotizaciones'},{link:'/ordencompra/proveedor/buscar',mini:'O',normal:'Orden Compra'},{link:'/guia/proveedor/buscar',mini:'G',normal:'Guías'},{link:'/conformidadservicio/proveedor/buscar',mini:'HAS',normal:'Aceptación de Servicio'},{link:'/factura/proveedor/buscar',mini:'CP',normal:'Comprobante de Pago'}]}]));
        }
    }
}

function EncontrarPath(element, path) {

    var str_regex = element.path.replace('/', '\/');
    var regex = new RegExp(str_regex, "i");

    var match = regex.test(path);
    return match;
}
